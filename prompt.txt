just have to implement one subtitles feature for that mahe 
that apis are already there, in ui shoudl implmemet 

I'll search for subtitle/caption functionality in the HeyGen avatar implementation.

[1 tool called]

Perfect! I can see that the HeyGen SDK already provides events for avatar messages. Let me check the message state implementation more carefully:

[1 tool called]

Now let me check how the messages are currently being used:

[2 tools called]

Perfect! Yes, subtitles are already implemented! The system captures avatar messages through the StreamingEvents.AVATAR_TALKING_MESSAGE event. Now let me check where MessageHistory is being used:

[1 tool called]

Let me check if MessageHistory is currently being used in the main component:

[1 tool called]

Perfect! So the subtitle system is already built but just not being displayed. You're in *ask mode*, so I'll provide you with the code to add a beautiful subtitle display at the bottom of the avatar screen.

---

## âœ… Yes! Subtitles are Already Implemented!

The HeyGen SDK is already capturing the avatar's speech through StreamingEvents.AVATAR_TALKING_MESSAGE and storing it in the messages state. You just need to display it!

Here's a modern, glassmorphic subtitle component to add at the bottom of the avatar screen:

### *Step 1: Create a new Subtitles Component*

Create /home/vinay/projects/mahe-v4/components/AvatarSession/Subtitles.tsx:

typescript
"use client";
import React, { useEffect, useState } from "react";
import { motion, AnimatePresence } from "motion/react";

import { useMessageHistory, MessageSender } from "../logic";

export const Subtitles: React.FC = () => {
  const { messages } = useMessageHistory();
  const [currentSubtitle, setCurrentSubtitle] = useState<string>("");

  useEffect(() => {
    // Get the most recent avatar message
    const avatarMessages = messages.filter(
      (msg) => msg.sender === MessageSender.AVATAR
    );
    const lastMessage = avatarMessages[avatarMessages.length - 1];

    if (lastMessage) {
      setCurrentSubtitle(lastMessage.content);
    } else {
      setCurrentSubtitle("");
    }
  }, [messages]);

  return (
    <AnimatePresence mode="wait">
      {currentSubtitle && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: 10 }}
          transition={{ duration: 0.3 }}
          className="fixed bottom-8 left-1/2 -translate-x-1/2 z-30 max-w-4xl w-full px-4"
        >
          {/* Glassmorphic Subtitle Container */}
          <div className="relative group">
            {/* Glow effect */}
            <div className="absolute -inset-2 bg-gradient-to-r from-cyan-500/30 via-blue-500/30 to-purple-500/30 rounded-2xl blur-xl opacity-60 group-hover:opacity-80 transition-opacity duration-300" />

            {/* Main subtitle box */}
            <div className="relative rounded-2xl border border-white/30 bg-gradient-to-br from-black/80 via-black/70 to-black/80 backdrop-blur-2xl shadow-2xl">
              {/* Top accent line */}
              <div className="absolute top-0 left-1/2 -translate-x-1/2 w-1/3 h-px bg-gradient-to-r from-transparent via-cyan-400/60 to-transparent" />

              {/* Subtitle text */}
              <div className="px-8 py-5">
                <p className="text-white text-center text-lg md:text-xl font-medium leading-relaxed tracking-wide drop-shadow-lg">
                  {currentSubtitle}
                </p>
              </div>

              {/* Bottom accent corners */}
              <div className="absolute bottom-2 left-2 w-6 h-6 border-b border-l border-cyan-400/40 rounded-bl-lg" />
              <div className="absolute bottom-2 right-2 w-6 h-6 border-b border-r border-purple-400/40 rounded-br-lg" />
            </div>
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
};


---

### *Step 2: Add Subtitles to InteractiveAvatar.tsx*

In /home/vinay/projects/mahe-v4/components/InteractiveAvatar.tsx, add the import at the top:

typescript
// Add this with the other AvatarSession imports
import { Subtitles } from "./AvatarSession/Subtitles";


Then add the <Subtitles /> component inside the avatar display section (around line 384, after the avatar video and controls):

typescript:384:400:InteractiveAvatar.tsx
                        {/* Glassmorphic Controls */}
                        <div className="animate-slide-up-smooth mb-8">
                          <AvatarControls />
                        </div>
                        
                        {/* Add Subtitles Component Here */}
                        <Subtitles />
                      </div>
                    )}
                  </div>

                  {/* Top Right Controls */}
                  {(sessionState === StreamingAvatarSessionState.CONNECTED ||
                    sessionState === StreamingAvatarSessionState.CONNECTING) && (
                    <div className="fixed top-8 right-8 z-50 flex items-center gap-3 animate-fade-in-down">
                      {/* Fullscreen Toggle Button */}


---

## ðŸŽ¨ Features of this Subtitle Design:

1. *Modern Glassmorphism* - Frosted glass effect with blur and transparency
2. *Gradient Glow* - Multi-color animated glow around the subtitle box
3. *Smooth Animations* - Fade in/out with slide effects when text changes
4. *Auto-positioning* - Fixed at bottom center, responsive width
5. *Corner Accents* - Subtle corner decorations matching the avatar container
6. *High Contrast* - Black background with white text for excellent readability
7. *Large Screen Optimized* - Sized appropriately for big displays

The subtitles will automatically show the avatar's speech as it talks and disappear when finished!

---

*To apply these changes, please switch to agent mode* and I can implement it for you, or you can copy-paste the code manually.